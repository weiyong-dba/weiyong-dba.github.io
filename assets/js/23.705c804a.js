(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{469:function(v,_,t){"use strict";t.r(_);var a=t(51),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),t("p",[v._v("MySQL的各种高可用方案，大多是基于以下几种基础来部署的：")]),v._v(" "),t("ul",[t("li",[v._v("基于主从复制")]),v._v(" "),t("li",[v._v("基于Galera协议")]),v._v(" "),t("li",[v._v("基于NDB引擎")]),v._v(" "),t("li",[v._v("基于中间件/proxy")]),v._v(" "),t("li",[v._v("基于共享存储")]),v._v(" "),t("li",[v._v("基于主机高可用")])]),v._v(" "),t("p",[v._v("在这些可选项中，最常见的就是基于主从复制的方案，其次是基于Galera的方案，我们重点说说这两种方案。其余几种方案在生产上用的并不多，我们只简单说下。")]),v._v(" "),t("h2",{attrs:{id:"基于主从复制的高可用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于主从复制的高可用方案"}},[v._v("#")]),v._v(" 基于主从复制的高可用方案")]),v._v(" "),t("h3",{attrs:{id:"双节点主从-keepalived-heartbeat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双节点主从-keepalived-heartbeat"}},[v._v("#")]),v._v(" 双节点主从 + keepalived/heartbeat")]),v._v(" "),t("p",[v._v("一般来说，中小型规模的时候，采用这种架构是最省事的。\n两个节点可以采用简单的一主一从模式，或者双主模式，并且放置于同一个VLAN中，在master节点发生故障后，利用keepalived/heartbeat的高可用机制实现快速切换到slave节点。")]),v._v(" "),t("p",[v._v("在这个方案里，有几个需要注意的地方：")]),v._v(" "),t("ul",[t("li",[v._v("采用keepalived作为高可用方案时，两个节点最好都设置成BACKUP模式，避免因为意外情况下（比如脑裂）相互抢占导致往两个节点写入相同数据而引发冲突；")]),v._v(" "),t("li",[v._v("把两个节点的auto_increment_increment（自增步长）和auto_increment_offset（自增起始值）设成不同值。其目的是为了避免master节点意外宕机时，可能会有部分binlog未能及时复制到slave上被应用，从而会导致slave新写入数据的自增值和原先master上冲突了，因此一开始就使其错开；当然了，如果有合适的容错机制能解决主从自增ID冲突的话，也可以不这么做；")]),v._v(" "),t("li",[v._v("slave节点服务器配置不要太差，否则更容易导致复制延迟。作为热备节点的slave服务器，硬件配置不能低于master节点；")]),v._v(" "),t("li",[v._v("如果对延迟问题很敏感的话，可考虑使用MariaDB分支版本，或者直接上线MySQL 5.7最新版本，利用多线程复制的方式可以很大程度降低复制延迟；")]),v._v(" "),t("li",[v._v("对复制延迟特别敏感的另一个备选方案，是采用semi sync replication（就是所谓的半同步复制）或者后面会提到的PXC方案，基本上无延迟，不过事务并发性能会有不小程度的损失，需要综合评估再决定；")]),v._v(" "),t("li",[v._v("keepalived的检测机制需要适当完善，不能仅仅只是检查mysqld进程是否存活，或者MySQL服务端口是否可通，还应该进一步做数据写入或者运算的探测，判断响应时间，如果超过设定的阈值，就可以启动切换机制；")]),v._v(" "),t("li",[v._v("keepalived最终确定进行切换时，还需要判断slave的延迟程度。需要事先定好规则，以便决定在延迟情况下，采取直接切换或等待何种策略。直接切换可能因为复制延迟有些数据无法查询到而重复写入；")]),v._v(" "),t("li",[v._v("keepalived或heartbeat自身都无法解决脑裂的问题，因此在进行服务异常判断时，可以调整判断脚本，通过对第三方节点补充检测来决定是否进行切换，可降低脑裂问题产生的风险。")])]),v._v(" "),t("p",[v._v("双节点主从+keepalived/heartbeat方案架构示意图见下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/mysql/mysql-ha-ms-keepalived.png",alt:""}})]),v._v(" "),t("h3",{attrs:{id:"多节点主从-mha-mmm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多节点主从-mha-mmm"}},[v._v("#")]),v._v(" 多节点主从+MHA/MMM")]),v._v(" "),t("p",[v._v("多节点主从，可以采用一主多从，或者双主多从的模式。\n这种模式下，可以采用MHA或MMM来管理整个集群，目前MHA应用的最多，优先推荐MHA，最新的MHA也已支持MySQL 5.6的GTID模式了，是个好消息。\nMHA的优势很明显：")]),v._v(" "),t("ul",[t("li",[v._v("开源，用Perl开发，代码结构清晰，二次开发容易；")]),v._v(" "),t("li",[v._v("方案成熟，故障切换时，MHA会做到较严格的判断，尽量减少数据丢失，保证数据一致性；")]),v._v(" "),t("li",[v._v("提供一个通用框架，可根据自己的情况做自定义开发，尤其是判断和切换操作步骤；")]),v._v(" "),t("li",[v._v("支持binlog server，可提高binlog传送效率，进一步减少数据丢失风险。")])]),v._v(" "),t("p",[v._v("MHA也有些限制：")]),v._v(" "),t("ul",[t("li",[v._v("需要在各个节点间打通ssh信任，这对某些公司安全制度来说是个挑战，因为如果某个节点被黑客攻破的话，其他节点也会跟着遭殃；")]),v._v(" "),t("li",[v._v("自带提供的脚本还需要进一步补充完善，当然了，一般的使用还是够用的。")])]),v._v(" "),t("h3",{attrs:{id:"多节点主从-etcd-zookeeper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多节点主从-etcd-zookeeper"}},[v._v("#")]),v._v(" 多节点主从+etcd/zookeeper")]),v._v(" "),t("p",[v._v("在大规模节点环境下，采用keepalived或者MHA作为MySQL的高可用管理还是有些复杂或麻烦。\n首先，这么多节点如果没有采用配置服务来管理，必然杂乱无章，线上切换时很容易误操作。\n在较大规模环境下，建议采用etcd/zookeeper管理集群，可实现快速检测切换，以及便捷的节点管理。")]),v._v(" "),t("h2",{attrs:{id:"基于galera协议的高可用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于galera协议的高可用方案"}},[v._v("#")]),v._v(" 基于Galera协议的高可用方案")]),v._v(" "),t("p",[v._v("Galera是Codership提供的多主数据同步复制机制，可以实现多个节点间的数据同步复制以及读写，并且可保障数据库的服务高可用及数据一致性。")]),v._v(" "),t("p",[v._v("基于Galera的高可用方案主要有MariaDB Galera Cluster和Percona XtraDB Cluster（简称PXC），目前PXC用的会比较多一些。")]),v._v(" "),t("p",[v._v("PXC的架构示意图见下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/mysql/mysql-ha-galera-repl-1.png",alt:""}})]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/mysql/mysql-ha-galera-repl-2.png",alt:""}})]),v._v(" "),t("p",[v._v("PXC的优点")]),v._v(" "),t("ul",[t("li",[v._v("服务高可用")]),v._v(" "),t("li",[v._v("数据同步复制(并发复制)，几乎无延迟")]),v._v(" "),t("li",[v._v("多个可同时读写节点，可实现写扩展，不过最好事先进行分库分表，让各个节点分别写不同的表或者库，避免让galera解决数据冲突")]),v._v(" "),t("li",[v._v("新节点可以自动部署，部署操作简单")]),v._v(" "),t("li",[v._v("数据严格一致性，尤其适合电商类应用")]),v._v(" "),t("li",[v._v("完全兼容MySQL")])]),v._v(" "),t("p",[v._v("虽然有这么多好处，但也有些局限性：")]),v._v(" "),t("ul",[t("li",[v._v("只支持InnoDB引擎")]),v._v(" "),t("li",[v._v("所有表都要有主键")]),v._v(" "),t("li",[v._v("不支持LOCK TABLE等显式锁操作")]),v._v(" "),t("li",[v._v("锁冲突、死锁问题相对更多")]),v._v(" "),t("li",[v._v("不支持XA")]),v._v(" "),t("li",[v._v("集群吞吐量/性能取决于短板")]),v._v(" "),t("li",[v._v("新加入节点采用SST时代价高")]),v._v(" "),t("li",[v._v("存在写扩大问题")])]),v._v(" "),t("p",[v._v("如果并发事务量很大的话，建议采用InfiniBand网络，降低网络延迟；")]),v._v(" "),t("p",[v._v("事实上，采用PXC的主要目的是解决数据的一致性问题，高可用是顺带实现的。因为PXC存在写扩大以及短板效应，并发效率会有较大损失，类似semi sync replication机制。")]),v._v(" "),t("h2",{attrs:{id:"其他高可用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他高可用方案"}},[v._v("#")]),v._v(" 其他高可用方案")]),v._v(" "),t("h3",{attrs:{id:"基于ndb-cluster"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于ndb-cluster"}},[v._v("#")]),v._v(" 基于NDB Cluster")]),v._v(" "),t("p",[v._v("由于NDB目前仍有不少缺陷和限制，不建议在生产环境上使用；")]),v._v(" "),t("h3",{attrs:{id:"基于共享存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于共享存储"}},[v._v("#")]),v._v(" 基于共享存储")]),v._v(" "),t("p",[v._v("一方面需要不太差的存储设备，另外共享存储可也会成为新的单点，除非采用基于高速网络的分布式存储，类似RDS的应用场景，架构方案就更复杂了，成本也可能更高；")]),v._v(" "),t("h3",{attrs:{id:"基于中间件-proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于中间件-proxy"}},[v._v("#")]),v._v(" 基于中间件(Proxy)")]),v._v(" "),t("p",[v._v("现在可靠的Proxy选择并不多，而且没有通用的Proxy，都有所针对，比如有的专注解决读写分离，有的专注分库分表等等，真正好用的Proxy一般要自行开发；")]),v._v(" "),t("h3",{attrs:{id:"基于主机高可用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于主机高可用"}},[v._v("#")]),v._v(" 基于主机高可用")]),v._v(" "),t("p",[v._v("是指采用类似RHCS构建一个高可用集群后，再部署MySQL应用的方案。老实说，我没实际用过，但从侧面了解到这种方案生产上用的并不多，可能也有些局限性所致吧；")]),v._v(" "),t("h2",{attrs:{id:"性能对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能对比"}},[v._v("#")]),v._v(" 性能对比")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th"),v._v(" "),t("th",[v._v("load加载14万数据")]),v._v(" "),t("th",[v._v("14万count(*)")]),v._v(" "),t("th",[v._v("14万SUM()")]),v._v(" "),t("th",[v._v("百万次insert（4thread）")]),v._v(" "),t("th",[v._v("百万count")]),v._v(" "),t("th",{staticStyle:{"text-align":"right"}},[v._v("百万SUM")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("mariadb galera cluster")]),v._v(" "),t("td",[v._v("1.54s")]),v._v(" "),t("td",[v._v("0.07s")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("6m12s")]),v._v(" "),t("td",[v._v("0.36s")]),v._v(" "),t("td",{staticStyle:{"text-align":"right"}},[v._v("0.45s")])]),v._v(" "),t("tr",[t("td",[v._v("mysql5.7 group repliation")]),v._v(" "),t("td",[v._v("1.17s")]),v._v(" "),t("td",[v._v("0.02s")]),v._v(" "),t("td",[v._v("0.05s")]),v._v(" "),t("td",[v._v("2m58s")]),v._v(" "),t("td",[v._v("0.13s")]),v._v(" "),t("td",{staticStyle:{"text-align":"right"}},[v._v("0.29s")])]),v._v(" "),t("tr",[t("td",[v._v("mariadb10.1.14单实例")]),v._v(" "),t("td",[v._v("0.85s")]),v._v(" "),t("td",[v._v("0.04s")]),v._v(" "),t("td",[v._v("0.06s")]),v._v(" "),t("td",[v._v("1m55s")]),v._v(" "),t("td",[v._v("0.53s")]),v._v(" "),t("td",{staticStyle:{"text-align":"right"}},[v._v("0.62s")])]),v._v(" "),t("tr",[t("td",[v._v("mysql5.6.22单实例")]),v._v(" "),t("td",[v._v("0.82s")]),v._v(" "),t("td",[v._v("0.05s")]),v._v(" "),t("td",[v._v("0.06s")]),v._v(" "),t("td",[v._v("27s")]),v._v(" "),t("td",[v._v("0.20s")]),v._v(" "),t("td",{staticStyle:{"text-align":"right"}},[v._v("0.29s")])]),v._v(" "),t("tr",[t("td",[v._v("5.7.17-log Source distribution")]),v._v(" "),t("td",[v._v("1s")]),v._v(" "),t("td",[v._v("0.04s")]),v._v(" "),t("td",[v._v("0.07s")]),v._v(" "),t("td",[v._v("40s")]),v._v(" "),t("td",[v._v("0.14s")]),v._v(" "),t("td",{staticStyle:{"text-align":"right"}},[v._v("0.29s")])])])]),v._v(" "),t("p",[v._v("​")])])}),[],!1,null,null,null);_.default=e.exports}}]);