(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{429:function(a,s,t){"use strict";t.r(s);var e=t(51),v=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"深入浅出aerospike"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深入浅出aerospike"}},[a._v("#")]),a._v(" 深入浅出Aerospike")]),a._v(" "),t("h2",{attrs:{id:"aerospike是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aerospike是什么"}},[a._v("#")]),a._v(" Aerospike是什么")]),a._v(" "),t("p",[a._v("aerospike是一个分布式可扩展的键-值NoSql数据库。它支持灵活的数据模式，并且支持acid。为以下3个目标构建：")]),a._v(" "),t("ol",[t("li",[a._v("弹性扩展")]),a._v(" "),t("li",[a._v("与传统数据库一样的可靠性")]),a._v(" "),t("li",[a._v("最小人工参与")])]),a._v(" "),t("h2",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[a._v("#")]),a._v(" 特点")]),a._v(" "),t("ul",[t("li",[a._v("可预见的高性能\n"),t("ul",[t("li",[a._v("99%的响应时间在1毫秒内，99.9可在5ms内。")])])]),a._v(" "),t("li",[a._v("混合架构\n"),t("ul",[t("li",[a._v("索引存储在RAM中，数据存储在闪存/固态硬盘SSD上。")])])]),a._v(" "),t("li",[a._v("群集感知客户端软件\n"),t("ul",[t("li",[a._v("客户端知晓数据存放的位置，通常通过一次单跳检索到数据。")])])]),a._v(" "),t("li",[a._v("无热点\n"),t("ul",[t("li",[a._v("使用hash函数来确保数据均匀分布到所有可用节点。")])])]),a._v(" "),t("li",[a._v("数据完整性\n"),t("ul",[t("li",[a._v("保持高度一致性。")])])]),a._v(" "),t("li",[a._v("线性扩展\n"),t("ul",[t("li",[a._v("添加节点无需分片无需人工干预。")])])]),a._v(" "),t("li",[a._v("跨数据中心支持")]),a._v(" "),t("li",[a._v("提供API语言\n"),t("ul",[t("li",[a._v("C/C++、JAVA、C#、Python、PHP、Go、Node.js、Perl、Ruby、Erlang")])])])]),a._v(" "),t("h2",{attrs:{id:"架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[a._v("#")]),a._v(" 架构")]),a._v(" "),t("ul",[t("li",[a._v("客户端层\n"),t("ul",[t("li",[a._v("带API的开源客户端和能够感知数据在集群中位置的追踪节点")])])]),a._v(" "),t("li",[a._v("群集和数据分布层\n"),t("ul",[t("li",[a._v("监控集群通信并提供自动化功能，故障转移、数据复制、跨数据中心数据同步")])])]),a._v(" "),t("li",[a._v("数据存储层\n"),t("ul",[t("li",[a._v("负责在DRAM和Flash中存储数据")]),a._v(" "),t("li",[a._v("内存、HDD、SSD混合存储")])])])]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/aerospike/architecture-diagram.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"运行机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行机制"}},[a._v("#")]),a._v(" 运行机制")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/aerospike/run-mode.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"数据管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据管理"}},[a._v("#")]),a._v(" 数据管理")]),a._v(" "),t("ul",[t("li",[a._v("包括类型列的键-值操作，比如自增这样的数据库内部操作")]),a._v(" "),t("li",[a._v("为实现高可用进行数据复制")]),a._v(" "),t("li",[a._v("基于行的回收策略")]),a._v(" "),t("li",[a._v("集群无缝升级")]),a._v(" "),t("li",[a._v("SSD优化")]),a._v(" "),t("li",[a._v("跨数据中心复制")])]),a._v(" "),t("h2",{attrs:{id:"扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[a._v("#")]),a._v(" 扩展")]),a._v(" "),t("ul",[t("li",[a._v("bin中复杂数据类型，比如list、map，他们支持嵌套。")]),a._v(" "),t("li",[a._v("队列，字符串和数值类型的bin值可用被索引，可以通过相等或者范围进行搜索。")]),a._v(" "),t("li",[a._v("用户自定义函数，允许数据库执行应用程序代码实现扩展。")]),a._v(" "),t("li",[a._v("汇聚，通过用户自定义函数操作聚合。")]),a._v(" "),t("li",[a._v("大数据类型，bin包含的数据结构可以堆叠至1M到1G，list和map是最佳存储方式。")])]),a._v(" "),t("h2",{attrs:{id:"数据模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[a._v("#")]),a._v(" 数据模型")]),a._v(" "),t("h3",{attrs:{id:"数据组织"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据组织"}},[a._v("#")]),a._v(" 数据组织")]),a._v(" "),t("p",[a._v("采用无模式数据模型，允许动态添加新类型bin。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/aerospike/data-mode.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"namespace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[a._v("#")]),a._v(" namespace")]),a._v(" "),t("p",[a._v("最顶层的容器，包含记录、索引、策略。策略决定namespace的行为，包括：数据如何存储：内存还是磁盘，存多少个副本，记录何时过期。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/aerospike/datamode-namespace.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"sets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sets"}},[a._v("#")]),a._v(" sets")]),a._v(" "),t("p",[a._v("记录属于set（逻辑容器）。set继承了包含它的namespace的策略。也可为set指定其他测策略。记录也可以不属于任何set。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/aerospike/datamode-sets.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"records"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#records"}},[a._v("#")]),a._v(" records")]),a._v(" "),t("p",[a._v("行存贮，基本存储单元，记录通过namespace中定义唯一key来访问。记录的组成如下：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("组成")]),a._v(" "),t("th",[a._v("描述")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("key")]),a._v(" "),t("td",[a._v("hash值，hash的结构有可能存在重复的问题")])]),a._v(" "),t("tr",[t("td",[a._v("metadata")]),a._v(" "),t("td",[a._v("记录的版本信息及过期时间")])]),a._v(" "),t("tr",[t("td",[a._v("bins（fields）")]),a._v(" "),t("td",[a._v("字段")])])])]),a._v(" "),t("blockquote",[t("p",[a._v("注:")])]),a._v(" "),t("p",[a._v("存储原始key也是可以的，Key结构体中有个useKey，将WritePolicy.sendKey设置为true，则useKey将被存储到一个bin中。")]),a._v(" "),t("h2",{attrs:{id:"分布式查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式查询"}},[a._v("#")]),a._v(" 分布式查询")]),a._v(" "),t("ol",[t("li",[a._v("分散请求到所有节点")]),a._v(" "),t("li",[a._v("内存中的索引快速映射到主键")]),a._v(" "),t("li",[a._v("索引与各节点SSD上的数据协作来保证ACID并管理迁移")]),a._v(" "),t("li",[a._v("从所有SSD、DRAM并行读取记录")]),a._v(" "),t("li",[a._v("在各节点汇聚结果集")]),a._v(" "),t("li",[a._v("从所有节点整合结果集发送到客户端")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/aerospike/distributed-query.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"数据分布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据分布"}},[a._v("#")]),a._v(" 数据分布")]),a._v(" "),t("ul",[t("li",[a._v("Shared-nothing架构：节点对等，无单点故障。")]),a._v(" "),t("li",[a._v("利用智能分区算法，数据分布在各个节点上。")]),a._v(" "),t("li",[a._v("使用ripemd160算法，任意长度的key被哈希化为20位定长字符串，前12位组成分区ID。分区分布在集群节点中，每个节点大约存储1/N的数据。")])]),a._v(" "),t("h2",{attrs:{id:"备份还原"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#备份还原"}},[a._v("#")]),a._v(" 备份还原")]),a._v(" "),t("ul",[t("li",[a._v("备份")])]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("asbackup -d bak20170202 -n namespace\n-d导出需要保存的文件\n-n namespace\n-s 导出的set\n-F 文件大小，超过时创建新文件\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("ul",[t("li",[a._v("还原")])]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("asrestore -h "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.0")]),a._v(".0.1 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),a._v(" -d bak20170202\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])}),[],!1,null,null,null);s.default=v.exports}}]);